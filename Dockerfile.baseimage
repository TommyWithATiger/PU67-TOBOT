FROM alpine:edge

ENV LANG C.UTF-8

RUN { \
      echo '#!/bin/sh'; \
      echo 'set -e'; \
      echo; \
      echo 'dirname "$(dirname "$(readlink -f "$(which javac || which java)")")"'; \
   } > /usr/local/bin/docker-java-home \
   && chmod +x /usr/local/bin/docker-java-home

ENV JAVA_HOME /usr/lib/jvm/java-1.8-openjdk
ENV PATH $PATH:$JAVA_HOME/bin
ENV JAVA_VERSION 8u92

RUN apk update && apk upgrade
RUN apk add --no-cache bash
RUN apk add --no-cache openjdk8
RUN [ "$JAVA_HOME" = "$(docker-java-home)" ]

RUN apk add --update nodejs=6.10.1-r0 nodejs-npm make maven curl

# RUN apt-get update
# RUN apt-get -y upgrade
# RUN apt-get install -y vim wget curl maven build-essential nodejs npm

# Upgrade node
# RUN npm cache clean
# RUN npm install -g n
# RUN n stable
# RUN curl -L https://npmjs.org/install.sh | sh

# Adding project
RUN mkdir -p /tobot
WORKDIR /tobot
COPY . ./

# Install dependencies and build frontend
WORKDIR /tobot/web
RUN node \
  --max_semi_space_size=1 \
  --max_old_space_size=198 \
  --max_executable_size=148
RUN npm install --silent

# Build backend
WORKDIR /tobot
RUN make backend-build
