eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgYmFja2VuZGVuZC10ZXN0czoKICAgIGltYWdlOiByZWdpc3RyeS5uaWtsYXNtaC5uby90b2JvdC1iYXNlaW1hZ2UKICAgIHdoZW46CiAgICAgIGV2ZW50OiBwdXNoCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBDT0RFQ09WX1RPS0VOPSR7Q09ERUNPVl9UT0tFTn0KICAgIGNvbW1hbmRzOgogICAgICAtIGVjaG8gXDw_eG1sIHZlcnNpb249XCIxLjBcIiBlbmNvZGluZz1cIlVURi04XCI_XD4gPiBqYXZhL3NyYy9NRVRBLUlORi9kYl9sb2dpbi54bWwKICAgICAgLSBlY2hvIFw8cHJvcGVydHkgbmFtZT1cImphdmF4LnBlcnNpc3RlbmNlLmpkYmMudXJsXCIgdmFsdWU9XCIiJHtEQl9MT0dJTn0iXCIvXD4gPj4gamF2YS9zcmMvTUVUQS1JTkYvZGJfbG9naW4ueG1sCiAgICAgIC0gZWNobyBcPHByb3BlcnR5IG5hbWU9XCJqYXZheC5wZXJzaXN0ZW5jZS5qZGJjLnVzZXJcIiB2YWx1ZT1cIiIke0RCX1VTRVJOQU1FfSJcIi9cPiA-PiBqYXZhL3NyYy9NRVRBLUlORi9kYl9sb2dpbi54bWwKICAgICAgLSBlY2hvIFw8cHJvcGVydHkgbmFtZT1cImphdmF4LnBlcnNpc3RlbmNlLmpkYmMucGFzc3dvcmRcIiB2YWx1ZT1cIiIke0RCX1BBU1NXT1JEfSJcIi9cPiA-PiBqYXZhL3NyYy9NRVRBLUlORi9kYl9sb2dpbi54bWwKICAgICAgLSBlY2hvICIke01BSUxfTE9HSU59IiA-IGphdmEvc3JjL01FVEEtSU5GL21haWxfbG9naW4udHh0CiAgICAgIC0gZWNobyAiJHtNQUlMX1BBU1NXT1JEfSIgPj4gamF2YS9zcmMvTUVUQS1JTkYvbWFpbF9sb2dpbi50eHQKICAgICAgLSBtYWtlIGJhY2tlbmQtYnVpbGQtdGVzdHMKICAgICAgLSBjZCBqYXZhCiAgICAgIC0gbXZuIGNvYmVydHVyYTpjb2JlcnR1cmEKICAgICAgLSBjdXJsIC1zIGh0dHBzOi8vY29kZWNvdi5pby9iYXNoIHwgYmFzaCAtCgogIGZyb250ZW5kLXRlc3RzOgogICAgaW1hZ2U6IHJlZ2lzdHJ5Lm5pa2xhc21oLm5vL3RvYm90LWJhc2VpbWFnZQogICAgd2hlbjoKICAgICAgZXZlbnQ6IHB1c2gKICAgIGNvbW1hbmRzOgogICAgICAtIGNkIHdlYgogICAgICAtIG5wbSBpbnN0YWxsIC0tZGVwdGg9MCAtLXF1aWV0CiAgICAgIC0gbnBtIHJ1biBidWlsZAoKICBkZXBsb3ltZW50OgogICAgaW1hZ2U6IHBsdWdpbnMvc3NoCiAgICBob3N0OiBjaS5uaWtsYXNtaC5ubwogICAgdXNlcm5hbWU6IHRvYm90CiAgICBwb3J0OiAyMgogICAgd2hlbjoKICAgICAgZXZlbnQ6IHB1c2gKICAgICAgYnJhbmNoOiBkZXZlbG9wbWVudAogICAgc2NyaXB0OgogICAgICAtIGNkIC9ob21lL3RvYm90L3RkdDQxNDAtYm90LXByb2plY3QKICAgICAgLSBtYWtlIGRyb25lLXByb2QK.ornTz89DFT3LgXdlMf93Ntx7aWrH5BUu2P9baM7Opxk