eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgYmFja2VuZGVuZC10ZXN0czoKICAgIGltYWdlOiByZWdpc3RyeS5uaWtsYXNtaC5uby90b2JvdC1iYXNlaW1hZ2UKICAgIHdoZW46CiAgICAgIGV2ZW50OiBwdXNoCiAgICAgIGJyYW5jaDogZGV2ZWxvcG1lbnQsIG1hc3RlcgogICAgY29tbWFuZHM6CiAgICAgIC0gZWNobyBcPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIj9cPiA-IGphdmEvc3JjL01FVEEtSU5GL2RiX2xvZ2luLnhtbAogICAgICAtIGVjaG8gXDxwcm9wZXJ0eSBuYW1lPVwiamF2YXgucGVyc2lzdGVuY2UuamRiYy51cmxcIiB2YWx1ZT1cIiIke0RCX0xPR0lOfSJcIi9cPiA-PiBqYXZhL3NyYy9NRVRBLUlORi9kYl9sb2dpbi54bWwKICAgICAgLSBlY2hvIFw8cHJvcGVydHkgbmFtZT1cImphdmF4LnBlcnNpc3RlbmNlLmpkYmMudXNlclwiIHZhbHVlPVwiIiR7REJfVVNFUk5BTUV9IlwiL1w-ID4-IGphdmEvc3JjL01FVEEtSU5GL2RiX2xvZ2luLnhtbAogICAgICAtIGVjaG8gXDxwcm9wZXJ0eSBuYW1lPVwiamF2YXgucGVyc2lzdGVuY2UuamRiYy5wYXNzd29yZFwiIHZhbHVlPVwiIiR7REJfUEFTU1dPUkR9IlwiL1w-ID4-IGphdmEvc3JjL01FVEEtSU5GL2RiX2xvZ2luLnhtbAogICAgICAtIGVjaG8gIiR7TUFJTF9MT0dJTn0iID4gamF2YS9zcmMvTUVUQS1JTkYvbWFpbF9sb2dpbi50eHQKICAgICAgLSBlY2hvICIke01BSUxfUEFTU1dPUkR9IiA-PiBqYXZhL3NyYy9NRVRBLUlORi9tYWlsX2xvZ2luLnR4dAogICAgICAtIG1ha2UgYmFja2VuZC1idWlsZC10ZXN0cwoKICBmcm9udGVuZC10ZXN0czoKICAgIGltYWdlOiByZWdpc3RyeS5uaWtsYXNtaC5uby90b2JvdC1iYXNlaW1hZ2UKICAgIHdoZW46CiAgICAgIGV2ZW50OiBwdXNoCiAgICAgIGJyYW5jaDogZGV2ZWxvcG1lbnQsIG1hc3RlcgogICAgY29tbWFuZHM6CiAgICAgIC0gY2Qgd2ViCiAgICAgIC0gbnBtIGluc3RhbGwgLS1kZXB0aD0wIC0tcXVpZXQKICAgICAgLSBucG0gcnVuIGJ1aWxkCgogIGRlcGxveW1lbnQ6CiAgICBpbWFnZTogcGx1Z2lucy9zc2gKICAgIGhvc3Q6IGNpLm5pa2xhc21oLm5vCiAgICB1c2VybmFtZTogdG9ib3QKICAgIHBvcnQ6IDIyCiAgICB3aGVuOgogICAgICBicmFuY2g6IGRldmVsb3BtZW50LCBtYXN0ZXIKICAgIHNjcmlwdDoKICAgICAgLSBlY2hvICJSZWxlYXNlICR7RFJPTkVfVEFHfSIKICAgICAgLSAuL2RlcGxveS5zaCAiJHtEUk9ORV9UQUd9IgoKICBzbGFjazoKICAgIGltYWdlOiBwbHVnaW5zL3NsYWNrCiAgICB3ZWJob29rOiAke1NMQUNLX1dFQkhPT0t9CiAgICBjaGFubmVsOiBkcm9uZQogICAgdXNlcm5hbWU6IHBla2thCiAgICBpY29uX3VybDogaHR0cHM6Ly93d3cuaWRpLm50bnUubm8vYmlsZGVyL2Fuc2F0dGUvcGVra2FhLmpwZwogICAgdGVtcGxhdGU6ID4KICAgICAge3sjaWYgYnVpbGQudGFnfX0KICAgICAgICB7eyNzdWNjZXNzIGJ1aWxkLnN0YXR1c319CiAgICAgICAgICBXZSBoYXZlIGEgbmV3LCB3b3JraW5nIHJlbGVhc2UhIFBla2thIGlzIGhhdmluZyBhIG5pY2UgZGF5LiBHb29kIGpvYiwgZXZlcnlvbmUhIHt7YnVpbGQubGlua319CiAgICAgICAge3tlbHNlfX0KICAgICAgICAgIFBla2thIHNhZC4uLiAgUmVhbGx5IHNhZC4uIFRoZSByZWxlYXNlIHdhcyBubyBzdWNjZXNzLiBObyByZWxlYXNlIHBhcnR5IHRvZGF5LiB7e2J1aWxkLmxpbmt9fQogICAgICAgIHt7L3N1Y2Nlc3N9fQogICAgICB7e2Vsc2V9fQogICAgICAgIHt7I3N1Y2Nlc3MgYnVpbGQuc3RhdHVzfX0KICAgICAgICAgIEJ1aWxkIHt7YnVpbGQubnVtYmVyfX0gc3VjY2VlZGVkISBQZWtrYSBpcyB2ZXJ5IGhhcHB5LiBHb29kIGpvYiwge3tidWlsZC5hdXRob3J9fS4ge3tidWlsZC5saW5rfX0gKHt7YnVpbGQuYnJhbmNofX0pCiAgICAgICAge3tlbHNlfX0KICAgICAgICAgIFBla2thIHNhZC4uLiBQbGVhc2UgZml4LCB7e2J1aWxkLmF1dGhvcn19LiB7e2J1aWxkLmxpbmt9fSAoe3tidWlsZC5icmFuY2h9fSkKICAgICAgICB7ey9zdWNjZXNzfX0KICAgICAge3svaWZ9fQogICAgd2hlbjoKICAgICAgc3RhdHVzOiBbIHN1Y2Nlc3MsIGZhaWx1cmUgXQo.pgyC_G5OnjDvlYruIHPr-Lg9pgaeW56SJ7PpKcRPlpQ